CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
CMAKE_POLICY(VERSION 2.8)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

# HIP_PATH
IF(NOT DEFINED $ENV{HIP_PATH})
  SET(HIP_PATH /opt/rocm/hip)
ELSE()
  SET(HIP_PATH $ENV{HIP_PATH})
ENDIF()

# HCC_PATH
IF(NOT DEFINED $ENV{HCC_PATH})
  SET(HCC_PATH /opt/rocm/hcc)
ELSE()
  SET(HCC_PATH $ENV{HCC_PATH})
ENDIF()
IF(NOT Torch_FOUND)
  FIND_PACKAGE(Torch)
ENDIF()

# HIPBLAS_PATH
IF(NOT DEFINED $ENV{HIPBLAS_PATH})
  SET(HIPBLAS_PATH /opt/rocm/hipblas)
ELSE()
  SET(HIPBLAS_PATH $ENV{HIPBLAS_PATH})
ENDIF()

# HIPSPARSE_PATH
IF(NOT DEFINED $ENV{HIPSPARSE_PATH})
  SET(HIPSPARSE_PATH /opt/rocm/hcsparse)
ELSE()
  SET(HIPSPARSE_PATH $ENV{HIPSPARSE_PATH})
ENDIF()

SET(THRUST_PATH "~/Thrust")

FIND_PACKAGE(HIP 1.0 REQUIRED)
EXECUTE_PROCESS(COMMAND ${HIP_PATH}/bin/hipconfig -P OUTPUT_VARIABLE PLATFORM)
EXECUTE_PROCESS(COMMAND ${HIP_PATH}/bin/hipconfig --cpp_config OUTPUT_VARIABLE HIP_CXX_FLAGS)
SET(CMAKE_CXX_COMPILER ${HIP_HIPCC_EXECUTABLE})

SET(HIP_CXX_FLAGS "-I/opt/rocm/hip/include -I/opt/rocm/hcc/include ${HIP_CXX_FLAGS}")
SET(HIP_HIPCC_FLAGS "-DGENERIC_GRID_LAUNCH=1 ${CMAKE_CXX_FLAGS}")
SET(CMAKE_CXX_COMPILER ${HIP_HIPCC_EXECUTABLE})
SET(CMAKE_C_COMPILER ${HIP_HIPCC_EXECUTABLE})
SET(CMAKE_C_FLAGS "-std=c99 -Werror=implicit-function-declaration ${CMAKE_C_FLAGS}")
SET(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} ${HIP_CXX_FLAGS}")
SET(CMAKE_CXX_FLAGS  "-std=c++11 ${CMAKE_CXX_FLAGS} ${HIP_CXX_FLAGS}")

IF(NOT TH_LIBRARIES)
  SET(TH_LIBRARIES "TH")
ENDIF(NOT TH_LIBRARIES)
MESSAGE(STATUS "TH_LIBRARIES: ${TH_LIBRARIES}")
IF(NOT THC_LIBRARIES)
  SET(THC_LIBRARIES "THC")
ENDIF(NOT THC_LIBRARIES)
MESSAGE(STATUS "THC_LIBRARIES: ${THC_LIBRARIES}")
IF(NOT THS_LIBRARIES)
  SET(THS_LIBRARIES "THS")
ENDIF(NOT THS_LIBRARIES)
MESSAGE(STATUS "THS_LIBRARIES: ${THS_LIBRARIES}")

INCLUDE_DIRECTORIES(${HIPBLAS_PATH}/include)
INCLUDE_DIRECTORIES(${HIPSPARSE_PATH}/include)
INCLUDE_DIRECTORIES(${THRUST_PATH})

IF(NOT THCS_INSTALL_BIN_SUBDIR
    OR NOT THCS_INSTALL_LIB_SUBDIR
    OR NOT THCS_INSTALL_INCLUDE_SUBDIR
    OR NOT THCS_INSTALL_CMAKE_SUBDIR)

  INCLUDE_DIRECTORIES(${TH_INCLUDE_PATH} ${TH_INCLUDE_PATH}/TH)
  LINK_DIRECTORIES(${TH_LIB_PATH})

  SET(THCS_INSTALL_BIN_SUBDIR "bin" CACHE PATH "THCS install binary subdirectory")
  SET(THCS_INSTALL_LIB_SUBDIR "lib" CACHE PATH "THCS install library subdirectory")
  SET(THCS_INSTALL_INCLUDE_SUBDIR "include" CACHE PATH "THCS install include subdirectory")
  SET(THCS_INSTALL_CMAKE_SUBDIR "share/cmake/THCS" CACHE PATH "THCS install cmake subdirectory")
ELSE()
  SET(THCS_INSTALL_BIN_SUBDIR ${Torch_INSTALL_BIN_SUBDIR})
  SET(THCS_INSTALL_LIB_SUBDIR ${Torch_INSTALL_LIB_SUBDIR})
  SET(THCS_INSTALL_INCLUDE_SUBDIR ${Torch_INSTALL_INCLUDE_SUBDIR})
  SET(THCS_INSTALL_CMAKE_SUBDIR ${Torch_INSTALL_CMAKE_SUBDIR})
ENDIF()

INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}")

SET(CMAKE_C_FLAGS "-std=c99 ${CMAKE_C_FLAGS}")

SET(src
  ${CMAKE_CURRENT_SOURCE_DIR}/THCSTensor.cpp
  )

SET(src-cuda
  ${CMAKE_CURRENT_SOURCE_DIR}/THCSTensor.cu
  ${CMAKE_CURRENT_SOURCE_DIR}/THCSparse.cu
  )

MESSAGE(STATUS "got cuda version " ${CUDA_VERSION})

FIND_LIBRARY(HIPSPARSE_LIBRARY hipsparse HINTS ${HIPSPARSE_PATH}/lib)
HIP_ADD_LIBRARY(THCS SHARED ${src} ${src-cuda})
TARGET_LINK_LIBRARIES(THCS ${ATEN_LIBRARIES} ${THC_LIBRARIES} ${HIPSPARSE_LIBRARY})

IF(NOT THCS_SO_VERSION)
  SET(THCS_SO_VERSION 1)
ENDIF(NOT THCS_SO_VERSION)
MESSAGE(STATUS "THCS_SO_VERSION: ${THCS_SO_VERSION}")
SET_TARGET_PROPERTIES(THCS PROPERTIES
  VERSION   ${THCS_SO_VERSION}
  SOVERSION ${THCS_SO_VERSION})

INSTALL(TARGETS THCS
          RUNTIME DESTINATION "${THCS_INSTALL_BIN_SUBDIR}"
          LIBRARY DESTINATION "${THCS_INSTALL_LIB_SUBDIR}"
          ARCHIVE DESTINATION "${THCS_INSTALL_LIB_SUBDIR}")

INSTALL(FILES
          THCS.h
          THCSTensor.h
          THCSGenerateAllTypes.h
          THCSGenerateByteType.h
          THCSGenerateCharType.h
          THCSGenerateShortType.h
          THCSGenerateIntType.h
          THCSGenerateLongType.h
          THCSGenerateHalfType.h
          THCSGenerateFloatType.h
          THCSGenerateFloatTypes.h
          THCSGenerateDoubleType.h
          THCSparse.h
          DESTINATION "${ATEN_INSTALL_INCLUDE_SUBDIR}/THCS")

INSTALL(FILES
          generic/THCSTensor.cpp
          generic/THCSTensor.cu
          generic/THCSTensor.h
          generic/THCSTensorMath.h
          generic/THCSTensorMath.cu
          DESTINATION "${ATEN_INSTALL_INCLUDE_SUBDIR}/THCS/generic")
