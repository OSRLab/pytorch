diff --git a/aten/src/ATen/Half.h b/aten/src/ATen/Half.h
index da2326cec..d5ea9a549 100644
--- a/aten/src/ATen/Half.h
+++ b/aten/src/ATen/Half.h
@@ -48,6 +48,7 @@ template<typename To, typename From> To checked_convert(From f, const char* name
 struct alignas(2) Half {
   unsigned short x;
   operator double();
+  operator __fp16();
 };
 
 template<> AT_API Half convert(float f);
@@ -56,11 +57,16 @@ template<> AT_API Half convert(double f);
 template<> AT_API double convert(Half f);
 template<> AT_API Half convert(int64_t f);
 template<> AT_API int64_t convert(Half f);
+template<> AT_API __fp16 convert(Half f);
 
 inline Half::operator double() {
   return convert<double, Half>(*this);
 }
 
+inline Half::operator __fp16() {
+  return convert<__fp16, Half>(*this);
+}
+
 template<> bool overflows<Half, double>(double f);
 template<> bool overflows<Half, int64_t>(int64_t f);
 
@@ -68,4 +74,15 @@ template<typename To, typename From>
 To HalfFix(From h) {
   return To { h.x };
 }
+
+template <>
+  inline __fp16 HalfFix<__fp16, Half>(Half h) {
+  return reinterpret_cast<__fp16&>(h);
+}
+template<>
+  inline Half HalfFix<Half, __fp16>(__fp16 h) {
+  unsigned short s = reinterpret_cast<unsigned short&>(h);
+  return Half { s };
+}
+
 } // namespace at
