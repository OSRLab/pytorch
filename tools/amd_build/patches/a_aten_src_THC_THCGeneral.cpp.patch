diff --git a/aten/src/THC/THCGeneral.cpp b/aten/src/THC/THCGeneral.cpp
index 443c7bdef..5e59c05a1 100644
--- a/aten/src/THC/THCGeneral.cpp
+++ b/aten/src/THC/THCGeneral.cpp
@@ -758,11 +758,11 @@ void __THCublasCheck(cublasStatus_t status, const char *file, const int line)
       case CUBLAS_STATUS_INVALID_VALUE:
         errmsg = "an invalid numeric value was used as an argument";
         break;
-
+#ifdef CUDA
       case CUBLAS_STATUS_ARCH_MISMATCH:
         errmsg = "an absent device architectural feature is required";
         break;
-
+#endif
       case CUBLAS_STATUS_MAPPING_ERROR:
         errmsg = "an access to GPU memory space failed";
         break;
@@ -803,11 +803,9 @@ void __THCusparseCheck(cusparseStatus_t status, const char *file, const int line
       case CUSPARSE_STATUS_INVALID_VALUE:
         errmsg = "an invalid numeric value was used as an argument";
         break;
-
       case CUSPARSE_STATUS_ARCH_MISMATCH:
         errmsg = "an absent device architectural feature is required";
         break;
-
       case CUSPARSE_STATUS_MAPPING_ERROR:
         errmsg = "an access to GPU memory space failed";
         break;
@@ -923,7 +921,10 @@ cudaError_t THCudaMemGetInfoCached(THCState *state,  size_t* freeBytes, size_t*
 
 half THC_float2half(float f)
 {
-#if CUDA_VERSION < 9000
+#if defined(__HIP_PLATFORM_HCC__)
+  half h;
+  return h;
+#elif CUDA_VERSION < 9000
   half h;
   TH_float2halfbits(&f, &h.x);
   return h;
@@ -936,12 +937,13 @@ half THC_float2half(float f)
 
 float  THC_half2float(half h)
 {
+#if defined(__HIP_PLATFORM_HCC__)
   float f;
-#if CUDA_VERSION < 9000
+  return f;
+#elif CUDA_VERSION < 9000
   TH_halfbits2float(&h.x, &f);
 #else
   __half_raw h_raw(h);
   TH_halfbits2float(&h_raw.x, &f);
 #endif
-  return f;
 }
